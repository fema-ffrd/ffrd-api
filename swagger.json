{
  "swagger": "2.0",
  "info": {
    "description": "An open-source API deployed as a Python Azure Function to allow a client to query for a raster value at a specified set of coordinates in a specified raster file (preferably in COG format).",
    "version": "1.0.0",
    "title": "FFRD API",
    "contact": {
      "email": "robert.royall@stantec.com"
    }
  },
  "host": "fema-nfip-api-dev.azurewebsites.net",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/get_values": {
      "post": {
        "tags": [
          "api"
        ],
        "summary": "Retrieves a raster cell value at a specified spatial location.",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "description": "JSON object describing the query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/api/get_ci_values": {
      "post": {
        "tags": [
          "api"
        ],
        "summary": "Converts post-processed information about hazards (mean, standard deviation, number to determine the associated confidence interval values.",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "description": "JSON object describing the query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CIQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CIResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Query": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string"
        },
        "bands": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "integer"
          }
        },
        "lat": {
          "type": "number",
          "format": "float"
        },
        "lon": {
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "file",
        "bands",
        "lat",
        "lon"
      ]
    },
    "CIQuery": {
      "type": "object",
      "properties": {
        "haz_stats": {
          "type": "object",
          "required": [
            "mean",
            "std_dev"
          ],
          "properties": {
            "mean": {
              "type": "number",
              "format": "float"
            },
            "std_dev": {
              "type": "number",
              "format": "float"
            }
          }
        },
        "realizations": {
          "type": "integer"
        },
        "distribution": {
          "type": "string"
        },
        "confidence_level": {
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "haz_stats"
      ]
    },
    "ApiResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "band": {
            "type": "integer"
          },
          "value": {
            "type": "number",
            "default": "null"
          }
        }
      }
    },
    "CIResponse": {
      "type": "object",
      "properties": {
        "lower_val": {
          "type": "number",
          "format": "float"
        },
        "upper_val": {
          "type": "number",
          "format": "float"
        },
        "lower_bound": {
          "type": "number",
          "format": "float"
        },
        "upper_bound": {
          "type": "number",
          "format": "float"
        }
      }
    }
  }
}